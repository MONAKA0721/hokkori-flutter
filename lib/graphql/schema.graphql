"""
Maps a Time GraphQL scalar to a Go time.Time struct.
"""
scalar Time

scalar Upload

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!, image: Upload): User!
  createPosts(
    input: CreatePostInput!
    input2: CreatePostInput!
    hashtagTitles: [String]!
    image: Upload
  ): Post!
  createPost(input: CreatePostInput!, hashtagTitles: [String]!): Post!
  createHashtag(input: CreateHashtagInput!): Hashtag!
  createWork(input: CreateWorkInput!): Work!
  likePost(input: LikePostInput!): LikePostPayload!
  unlikePost(input: UnlikePostInput!): UnlikePostPayload!
  bookmarkPost(input: BookmarkPostInput!): BookmarkPostPayload!
  unbookmarkPost(input: UnbookmarkPostInput!): UnbookmarkPostPayload!
  followUser(input: FollowUserInput!): FollowUserPayload!
  unfollowUser(input: UnfollowUserInput!): UnfollowUserPayload!
  createDraft(input: CreateDraftInput!, hashtagTitles: [String]!): Draft!
  updateDraft(
    id: ID!
    input: UpdateDraftInput!
    hashtagTitles: [String]!
  ): Draft!
  deleteDraft(input: DeleteDraftInput!): DeleteDraftPayload!
}

input LikePostInput {
  clientMutationId: String
  userID: ID!
  postID: ID!
}

type LikePostPayload {
  clientMutationId: String
  post: Post
}

input UnlikePostInput {
  clientMutationId: String
  userID: ID!
  postID: ID!
}

type UnlikePostPayload {
  clientMutationId: String
  post: Post
}

input BookmarkPostInput {
  clientMutationId: String
  userID: ID!
  postID: ID!
}

type BookmarkPostPayload {
  clientMutationId: String
  post: Post
}

input UnbookmarkPostInput {
  clientMutationId: String
  userID: ID!
  postID: ID!
}

type UnbookmarkPostPayload {
  clientMutationId: String
  post: Post
}

input FollowUserInput {
  clientMutationId: String
  userID: ID!
  followerID: ID!
}

type FollowUserPayload {
  clientMutationId: String
  user: User
}

input UnfollowUserInput {
  clientMutationId: String
  userID: ID!
  followerID: ID!
}

type UnfollowUserPayload {
  clientMutationId: String
  user: User
}

type WorkCategory {
  id: ID!
  name: String!
  count: Int!
}

input DeleteDraftInput {
  clientMutationId: String
  draftId: ID!
  userID: ID!
}

type DeleteDraftPayload {
  clientMutationId: String
  draftId: ID
  userID: ID
}
